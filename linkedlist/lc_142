/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *detectCycle(ListNode *head) {
        ListNode * fast= head, * slow= head , * prev=NULL;
        while(fast!=NULL && fast->next!=NULL){
            prev=fast;
            slow=slow->next;
            fast=fast->next->next;
            if(slow==fast) {
                while(head!=slow){
                    slow=slow->next;
                    head=head->next;
                }
                return head;
            }
        }
        return NULL;
    }
};
