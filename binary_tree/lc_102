/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
    vector <vector <int>> vp;

    if(!root) return vp;
    queue <TreeNode * > q;
    q.push(root);
    TreeNode * stop= new TreeNode (1001);q.push(stop);
    vector<int> v;
    while(!q.empty()){
        TreeNode  * curr=  q.front();
        q.pop();
        if(curr->val==1001) {
            vp.push_back(v);
            v.clear();
            if(!q.empty()) {
                TreeNode * stop= new TreeNode (1001);
                q.push(stop);
            }
        }
        else{
        v.push_back(curr->val);
        if(curr->left) q.push(curr->left);
        if(curr->right) q.push(curr->right);
        }
    }
    return vp;
    }
};
